// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings to `headers/carpcconnector.h`.
class CarPCNativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  CarPCNativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  CarPCNativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Char> SendMessage(
    ffi.Pointer<ffi.Char> message,
  ) {
    return _SendMessage(
      message,
    );
  }

  late final _SendMessagePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('SendMessage');
  late final _SendMessage = _SendMessagePtr.asFunction<
      ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  /// Version of the native C library
  late final ffi.Pointer<ffi.Pointer<ffi.Char>> _library_version =
      _lookup<ffi.Pointer<ffi.Char>>('library_version');

  ffi.Pointer<ffi.Char> get library_version => _library_version.value;
}
